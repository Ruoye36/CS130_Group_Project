const swaggerAutogen = require("swagger-autogen")();

const outputFile = "./swagger_output.json";
const endpointsFiles = [
  "./routes/api/auth.js",
  "./routes/api/lib.js",
  "./routes/api/tasks.js",
  "./routes/api/user.js",
];

const doc = {
  info: {
    version: "1.0.0",
    title: "My API",
    description:
      "Documentation automatically generated by the <b>swagger-autogen</b> module.",
  },
  host: "localhost:3000",
  basePath: "/",
  schemes: ["http", "https"],
  consumes: ["application/json"],
  produces: ["application/json"],
  tags: [
    {
      name: "Auth",
      description: "Firebase Auth Endpoints",
    },
    {
      name: "Lib",
      description: "Twilio Email Endpoints",
    },
    {
      name: "Tasks",
      description: "Task CRUD Endpoints to query Tasks Firestore Collection",
    },
    {
      name: "User",
      description: "User Enpoints connected to User Firestore Collection",
    },
  ],
  definitions: {
    TaskInfo: {
      customername: "String David Joe",
      customeremail: "String test@test.com",
      category: "String Tutoring",
      price: "String $15/hr",
      description: "String Need help with CS181.",
      datetime: "String 11/09/2022 13:30",
      location: "String Online",
      status: "String Open",
      taskeremail: "String test1@test.com",
      taskername: "String bruinTasker",
      key: 21,
    },
    TaskInfoNew: {
      customername: "String David Joe",
      customeremail: "String test@test.com",
      category: "String Tutoring",
      price: "String $15/hr",
      description: "String Need help with CS181.",
      datetime: "String 11/09/2022 13:30",
      location: "String Online",
      status: "String Open",
      taskeremail: "String empty",
      taskername: "String empty",
    },
    UserInfo: {
      email: "String email",
      profileInformation: {
        bio: "String Bio",
        courses: "String Comma seprated list of courses",
        phonenumber: "111-111-1111",
        skills: "String Comma seprated list of courses",
        socialmedia: "String media link",
        website: "String website",
      },
      taskAccepted: "Array of task keys: [1, 2, 3]",
      taskCreated: "Array of task keys: [1, 2, 45]",
      tasker: "Boolean: true or false",
      username: "String username",
    },
    UserLogin: {
      email: "String email",
      password: "String password",
    },
    LoggedOutMessage: {
      message: "logged out",
    },
    TaskList: [
      { $ref: "#/definitions/TaskInfo" },
      { $ref: "#/definitions/TaskInfo" },
      { $ref: "#/definitions/TaskInfo" },
    ],
    EmailInfo: {
      customeremail: "String devinyerasi@yahoo.com",
      customername: "String Hussein Customer",
      taskeremail: "String devinyerasi@yahoo.com",
      tasker: "String Hussein tasker",
      description: "String testing description stuff bla bla bla bnla",
    },
    SuccessMessage: {
      msg: "Success",
    },
    ErrorMessage: {
      error: "Error message in String Format",
    },
    TaskCounter: {
      key: 53,
    },
  },
};

swaggerAutogen(outputFile, endpointsFiles, doc);
